-# Sub header with party name, politician and mandate period
= render 'ruling_party_description', ruling_party: @ruling_party
#main-content
  -# Tabs view
  %ul.promises-list.accordion-tabs-minimal
    - for category, promises in @ruling_party.promises.categorized
      %li.tab-header-and-content
        %a.tab-link{href: '#', class: ('is-active' if category == 0)}
          = t(category, scope: 'promise.subject')
        .tab-content
          %ul.accordion
            - for promise in promises
              %li.promise{class: "#{promise.status}"}
                %a.js-accordion-trigger
                  .status
                    %i.fa{class: "status-#{promise.status}", title: t(promise.status, scope: 'promise.status')}
                  .title
                    = promise.title
                .more-infos
                  - if promise.description?
                    .description<
                      = promise.description
                  .sources
                    - if promise.sources.empty?
                      = t('no_source')
                    - else
                      -# Todo : Pluralize / translate
                      Source :
                      - for source in promise.sources
                        = source.media
                        \-
                        %a{href: source.url}
                          = source.title

  -# Global mandate statistics
  #mandate-statistics
    - days_in_office = ([DateTime.now, @ruling_party.mandate_end].min - @ruling_party.mandate_start).to_i
    = t('days_in_office', nb_days: days_in_office)
    .progress-bar-indication
      %span.meter{style: "width: #{days_in_office.to_f / @ruling_party.total_mandate_duration * 100}%"}
        %p

    - for promise_groups_counts in @ruling_party.promises.group(:status).count
      .status
        - status_name = promise_groups_counts[0]
        - status_name_local = t(status_name, scope: 'promise.status')
        %i.fa{class: "status-#{status_name}", title: status_name_local}
        = "#{status_name_local}: #{promise_groups_counts[1]}"



